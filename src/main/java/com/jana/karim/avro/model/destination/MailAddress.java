/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jana.karim.avro.model.destination;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MailAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MailAddress\",\"namespace\":\"com.jana.karim.avro.model.destination\",\"fields\":[{\"name\":\"city\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.CharSequence> city;

  /**
   * Default constructor.
   */
  public MailAddress() {}

  /**
   * All-args constructor.
   */
  public MailAddress(java.util.List<java.lang.CharSequence> city) {
    this.city = city;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return city;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: city = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.util.List<java.lang.CharSequence> getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.util.List<java.lang.CharSequence> value) {
    this.city = value;
  }

  /** Creates a new MailAddress RecordBuilder */
  public static com.jana.karim.avro.model.destination.MailAddress.Builder newBuilder() {
    return new com.jana.karim.avro.model.destination.MailAddress.Builder();
  }
  
  /** Creates a new MailAddress RecordBuilder by copying an existing Builder */
  public static com.jana.karim.avro.model.destination.MailAddress.Builder newBuilder(com.jana.karim.avro.model.destination.MailAddress.Builder other) {
    return new com.jana.karim.avro.model.destination.MailAddress.Builder(other);
  }
  
  /** Creates a new MailAddress RecordBuilder by copying an existing MailAddress instance */
  public static com.jana.karim.avro.model.destination.MailAddress.Builder newBuilder(com.jana.karim.avro.model.destination.MailAddress other) {
    return new com.jana.karim.avro.model.destination.MailAddress.Builder(other);
  }
  
  /**
   * RecordBuilder for MailAddress instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MailAddress>
    implements org.apache.avro.data.RecordBuilder<MailAddress> {

    private java.util.List<java.lang.CharSequence> city;

    /** Creates a new Builder */
    private Builder() {
      super(com.jana.karim.avro.model.destination.MailAddress.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.jana.karim.avro.model.destination.MailAddress.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing MailAddress instance */
    private Builder(com.jana.karim.avro.model.destination.MailAddress other) {
            super(com.jana.karim.avro.model.destination.MailAddress.SCHEMA$);
      if (isValidValue(fields()[0], other.city)) {
        this.city = data().deepCopy(fields()[0].schema(), other.city);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'city' field */
    public java.util.List<java.lang.CharSequence> getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public com.jana.karim.avro.model.destination.MailAddress.Builder setCity(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.city = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'city' field */
    public com.jana.karim.avro.model.destination.MailAddress.Builder clearCity() {
      city = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public MailAddress build() {
      try {
        MailAddress record = new MailAddress();
        record.city = fieldSetFlags()[0] ? this.city : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
